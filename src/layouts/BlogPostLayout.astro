---
import type { CollectionEntry } from "astro:content";
import FormattedDate from "@components/astro/FormattedDate.astro";
import BaseLayout from "./BaseLayout.astro";
import TagList from "@components/astro/TagList.astro";
import type { MarkdownHeading } from "astro";
import { Image } from "astro:assets";
import TableOfContents from "@components/astro/TableOfContents.astro";
import ScrollIndicator from "@components/astro/ScrollIndicator.astro";
import type { HeadProps } from "@components/astro/Head.astro";

type Props = CollectionEntry<"blog">["data"] & {
  head: HeadProps;
  headings: MarkdownHeading[];
  minutesRead?: string;
  words?: number;
};

const {
  head,
  title,
  description,
  pubDate,
  // updatedDate,
  heroImage,
  heroAlt = "",
  tags = [],
  headings = [],
  minutesRead,
  words,
} = Astro.props;

const importedHero =
  heroImage &&
  (import(/* @vite-ignore */ heroImage) as Promise<{ default: ImageMetadata }>);
---

<style>
  .post > :global(p) {
    line-height: 1.75em;
  }

  .description {
    margin-bottom: 0;
  }

  .post-metadata {
    padding: 0.5em 0;
    line-height: 1.5em;
  }

  .post-metadata p {
    margin: 0.5em 0;
  }

  section {
    padding: 1em 0;
  }
</style>

<BaseLayout
  head={{
    ...head,
    title,
    description,
    image: heroImage,
    keywords: tags,
  }}
>
  <Fragment slot="header">
    <h1 class="title">
      {title}
      <small><FormattedDate date={pubDate} /></small>
      <!-- <small>{{ subtitle }}</small> -->
    </h1>
    <p class="description">{description}</p>
    <div class="post-metadata">
      <p>
        {minutesRead} â€¢ {words?.toLocaleString()} words
      </p>
      {tags.length > 0 && <TagList tags={tags} />}
    </div>
    <ScrollIndicator />
  </Fragment>

  <section>
    {
      importedHero && (
        <Image src={importedHero} alt={heroAlt} class="hero-image" />
      )
    }
    <TableOfContents headings={headings} />
    <article class="post">
      <slot />
    </article>
  </section>
</BaseLayout>
