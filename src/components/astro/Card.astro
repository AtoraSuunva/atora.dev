---
import { Picture } from "astro:assets";
import FormattedDate from "./FormattedDate.astro";
import TagList from "./TagList.astro";

export type CardImage = Parameters<typeof Picture>[0];

interface Props {
  title: string;
  description: string;
  date?: Date;
  link?: string;
  linkText?: string;
  image?: CardImage;
  icon?: CardImage | string;
  tags?: string[];
}

const { title, description, date, link, linkText, image, icon, tags } =
  Astro.props;
---

<style>
  .card {
    --card-padding: 1.5em;
    display: flex;
    padding: var(--card-padding);
    margin: 1.5em 0em;
    border-radius: var(--border-radius);
    background-color: var(--nav-background);
    box-shadow: var(--box-shadow-raised);
  }

  .card .card-content {
    width: 100%;
  }

  .card .card-main {
    width: 100%;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
  }

  .card h3 {
    margin: 0;
    font-size: 1.5em;
  }

  .card .card-text {
    margin-right: 1em;
  }

  .card .card-text h3 small {
    color: #999;
    font-size: 0.75em;
    margin-left: 0.4em;
  }

  .card-text > .post-tags {
    margin-top: 0.5em;
  }

  .card .card-icon img {
    --result: calc(100% - 2 * var(--card-padding));
    width: 100px;
    height: 100px;
    border-radius: var(--border-radius);
    overflow: clip;
    background-color: var(--background-darken);
    display: flex;
    justify-content: center;
    align-items: center;
    object-fit: cover;
    font-size: 2vw;
  }

  .card .card-image {
    width: 320px;
    max-height: 320px;
    border-radius: var(--border-radius);
    overflow: clip;
    object-fit: contain;
    background-color: var(--background-darken);
  }

  .card .card-image img {
    width: 100%;
    height: 100%;
    object-fit: contain;
  }

  @media screen and (max-width: 768px) {
    .card {
      flex-direction: column-reverse;
      align-items: center;
    }

    .card .card-main {
      flex-direction: column;
      justify-content: space-between;
    }

    .card .card-image {
      margin-top: 0.5em;
      margin-bottom: 1.5em;
      align-self: center;
    }
  }

  .link-button {
    display: flex;
    align-content: center;
    width: max-content;
    padding: 0.5em 0.5em;
    border-radius: var(--border-radius);
    background-color: var(--tertiary-color);
    color: var(--main-font);
    text-decoration: none;
    transition: all 0.3s ease-in-out;
  }

  .link-button.disabled {
    background-color: #555;
    border: 2px solid #333;
    color: var(--muted-font);
    cursor: default;
  }

  .link-button:not(.disabled):hover,
  .link-button:not(.disabled):focus {
    background-color: var(--active-tertiary-color);
    box-shadow: var(--box-shadow-raised);
  }
</style>

<article class="card">
  <div class="card-content">
    <div class="card-main">
      <div class="card-text">
        <h3>
          {title}{
            date && (
              <small>
                <FormattedDate date={date} />
              </small>
            )
          }
        </h3>
        <p>{description}</p>
        {
          tags && tags.length > 0 && (
            <p>
              <TagList tags={tags} showMax={3} />
            </p>
          )
        }
      </div>
      {
        image && (
          <Picture {...image} pictureAttributes={{ class: "card-image" }} />
        )
      }
    </div>
    {
      link && (
        <a class="link-button" href={link} rel="noopener noreferrer">
          {linkText || link}
        </a>
      )
    }
  </div>
  {
    typeof icon === "string" ? (
      <div class="card-icon">{icon}</div>
    ) : (
      icon && <Picture {...icon} pictureAttributes={{ class: "card-icon" }} />
    )
  }
</article>
